@model IEnumerable<EmployeeManagement.Models.Employee>

<!DOCTYPE html>
<html>
<head>
    <title>Gestión de Empleados</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
    <style>
        body {
            padding-top: 20px;
        }

        .table th, .table td {
            text-align: center;
        }

        .navbar {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <!-- Barra de navegación -->
    <nav class="navbar navbar-expand-sm navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="/Home">GESTIÓN DE EMPLEADOS</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/Home/About">Daniel Delgado Florez</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Home/Contact">Contacto: 3043041552</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container">
       
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Nombre</th>
                    <th>Cargo</th>
                    <th>Oficina</th>
                    <th>Salario</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="employeeTable">
                <!-- Aquí se cargarán los datos dinámicamente con jQuery -->
            </tbody>
        </table>

        <h3>Agregar o Editar Empleado</h3>
        <form id="employeeForm">
            <input type="hidden" id="EmployeeId" />
            <div class="form-group">
                <label for="Name">Nombre:</label>
                <input type="text" class="form-control" id="Name" required pattern="[a-zA-Z\s]+" title="Solo letras y espacios" />
            </div>
            <div class="form-group">
                <label for="Position">Cargo:</label>
                <input type="text" class="form-control" id="Position" required pattern="[a-zA-Z\s\-]+" title="Solo letras, espacios y guiones" />
            </div>
            <div class="form-group">
                <label for="Office">Oficina:</label>
                <input type="text" class="form-control" id="Office" required pattern="[a-zA-Z\s]+" title="Solo letras y espacios" />
            </div>
            <div class="form-group">
                <label for="Salary">Salario:</label>
                <input type="number" class="form-control" id="Salary" required min="0" step="0.01" />
            </div>
            <button type="submit" class="btn btn-primary" id="submitBtn">Agregar Empleado</button>
        </form>
    </div>

    <script>
    $(document).ready(function () {
        // Función para cargar la lista de empleados
        function loadEmployees() {
            $.ajax({
                url: '@Url.Action("GetEmployees", "Employee")',
                method: 'GET',
                success: function (data) {
                    var rows = '';
                    data.forEach(function (employee) {
                        rows += '<tr>';
                        rows += '<td>' + employee.Name + '</td>';
                        rows += '<td>' + employee.Position + '</td>';
                        rows += '<td>' + employee.Office + '</td>';
                        rows += '<td>' + employee.Salary.toFixed(2) + '</td>';
                        rows += '<td><button class="btn btn-warning edit-btn" data-id="' + employee.Id + '">Editar</button> ';
                        rows += '<button class="btn btn-danger delete-btn" data-id="' + employee.Id + '">Eliminar</button></td>';
                        rows += '</tr>';
                    });
                    $('#employeeTable').html(rows);
                },
                error: function () {
                    alert('Error al cargar los empleados.');
                }
            });
        }

        // Maneja el envío del formulario de empleado
        $('#employeeForm').on('submit', function (event) {
            event.preventDefault();

            var employee = {
                Id: $('#EmployeeId').val(),
                Name: $('#Name').val().trim(),
                Position: $('#Position').val().trim(),
                Office: $('#Office').val().trim(),
                Salary: parseFloat($('#Salary').val())
            };

            if (!employee.Name || !employee.Position || !employee.Office || isNaN(employee.Salary)) {
                alert('Por favor, complete todos los campos correctamente.');
                return;
            }

            var url = employee.Id ? '@Url.Action("UpdateEmployee", "Employee")' : '@Url.Action("AddEmployee", "Employee")';

            $.ajax({
                url: url,
                method: 'POST',
                data: employee,
                success: function () {
                    loadEmployees();
                    $('#employeeForm')[0].reset();
                    $('#EmployeeId').val('');
                    $('#submitBtn').text('Agregar Empleado');
                },
                error: function () {
                    alert('Error al procesar la solicitud.');
                }
            });
        });

        // Maneja la edición de un empleado
        $(document).on('click', '.edit-btn', function () {
            var id = $(this).data('id');

            $.ajax({
                url: '@Url.Action("GetEmployeeById", "Employee")',
                method: 'GET',
                data: { id: id },
                success: function (data) {
                    $('#EmployeeId').val(data.Id);
                    $('#Name').val(data.Name);
                    $('#Position').val(data.Position);
                    $('#Office').val(data.Office);
                    $('#Salary').val(data.Salary.toFixed(2));
                    $('#submitBtn').text('Actualizar Empleado');
                },
                error: function () {
                    alert('Error al obtener los datos del empleado.');
                }
            });
        });

        // Maneja la eliminación de un empleado
        $(document).on('click', '.delete-btn', function () {
            var id = $(this).data('id');

            if (confirm('¿Estás seguro de que deseas eliminar este empleado?')) {
                $.ajax({
                    url: '@Url.Action("DeleteEmployee", "Employee")',
                    method: 'POST',
                    data: { id: id },
                    success: function () {
                        loadEmployees();
                    },
                    error: function () {
                        alert('Error al eliminar el empleado.');
                    }
                });
            }
        });

        // Carga inicial de empleados
        loadEmployees();
    });
    </script>
</body>
</html>